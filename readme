## Spam Email Classifier

### 1. Project Overview
This project is a spam email classifier built using a dataset of SMS messages. The purpose of this project is to classify messages as either 'ham' (legitimate) or 'spam' using machine learning techniques. The dataset used for training and testing the classifier consists of 5,574 messages in English, which have been tagged accordingly. This project utilizes Python and popular libraries such as scikit-learn and pandas to create a robust classification model.

### 2. Dataset Description
The dataset, known as the SMS Spam Collection v.1, is a set of SMS tagged messages that have been collected for SMS spam research. It contains 5,574 messages tagged as either 'ham' or 'spam'. Below are details about the dataset:

#### 2.1 Sources
The dataset has been compiled from several free or research sources on the web:

- **Grumbletext**: A UK forum where users publicly share spam SMS messages they received. The dataset includes 425 manually extracted spam messages. [Link](http://www.grumbletext.co.uk/).
- **Caroline Tag's PhD Thesis**: Contains 450 SMS 'ham' messages collected from this source. [Link](http://etheses.bham.ac.uk/253/1/Tagg09PhD.pdf).
- **NUS SMS Corpus**: A collection of 3,375 SMS 'ham' messages collected at the National University of Singapore, mainly from students. [Link](http://www.comp.nus.edu.sg/~rpnlpir/downloads/corpora/smsCorpus/).
- **SMS Spam Corpus v.0.1 Big**: Includes 1,002 'ham' messages and 322 'spam' messages. [Link](http://www.esp.uem.es/jmgomez/smsspamcorpus/).

#### 2.2 Statistics
- **Total Messages**: 5,574
- **Legitimate (Ham) Messages**: 4,827 (86.6%)
- **Spam Messages**: 747 (13.4%)

#### 2.3 Format
The dataset is formatted as follows:
- Each line contains a label ('ham' or 'spam') followed by the SMS text.
- Example entries:
  - `ham   Ok lar... Joking wif u oni...`
  - `spam   Free entry in 2 a wkly comp to win FA Cup final tkts 21st May 2005. Text FA to 87121 to receive entry question(std txt rate)T&C's apply 08452810075over18's`

### 3. Usage
This project demonstrates the use of machine learning for classifying SMS messages as spam or ham. The model is trained using scikit-learn and can be used to classify new messages. Below are instructions on how to use the classifier:

1. **Install Dependencies**: Make sure you have Python installed, along with the required libraries listed in `requirements.txt`.
2. **Run the Classifier**: Use the `spam_classifier.py` script to train the model and make predictions.
3. **Example**:
   ```
   python spam_classifier.py
   ```
   The script will output the classification results and model performance metrics such as accuracy.

### 4. Methodology
The following steps were followed to create the classifier:

1. **Data Preprocessing**: The dataset was cleaned, and text was tokenized to prepare it for training.
2. **Feature Extraction**: TF-IDF vectorization was used to convert text messages into numerical features.
3. **Model Training**: Various machine learning models (e.g., Naive Bayes, SVM) were tested, and the best-performing model was selected.
4. **Evaluation**: The model's performance was evaluated using accuracy, precision, recall, and F1-score.

### 5. About
This project was created by DariousAI as part of a study into SMS spam detection using machine learning. The dataset was collected by Tiago Agostinho de Almeida and José María Gómez Hidalgo, with contributions from Dr. Min-Yen Kan.

### 6. License
The SMS Spam Collection v.1 is provided for free and can be distributed under the "Attribution-Noncommercial-Share Alike 3.0 Unported" Creative Commons License. Please make a reference to the original authors if you use this dataset.

This project is provided "AS IS" without warranty of any kind. Use at your own risk.

